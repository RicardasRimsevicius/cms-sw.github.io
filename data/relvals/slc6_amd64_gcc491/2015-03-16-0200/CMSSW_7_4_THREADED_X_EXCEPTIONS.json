{
    "An exception of category 'OutputOpenError' occurred while\n   [0] Processing run: 1\n   [1] Calling global beginRun for module ExternalLHEProducer/'externalLHEProducer'\nException Message:\nUnable to open script output file cmsgrid_final.lhe (errno=2, No such file or directory).\n": [
        "526.0",
        "529.0",
        "515.0"
    ],
    "An exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 1\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\nAn exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 4\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\nAn exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 2\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\nAn exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 3\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\n": [
        "401.0"
    ],
    "An exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 1\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\nAn exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 4\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\nAn exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 3\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\nAn exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 2\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\n": [
        "25400.0"
    ],
    "An exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 3\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\nAn exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 4\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\nAn exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 1\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\nAn exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 2\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\n": [
        "400.0"
    ],
    "An exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 4\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\nAn exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 1\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\nAn exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 3\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\nAn exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 2\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\n": [
        "25400.2"
    ],
    "An exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 4\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\nAn exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 2\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\nAn exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 1\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\nAn exception of category 'ProductNotFound' occurred while\n   [0] Processing run: 1 lumi: 1 event: 3\n   [1] Running path 'reconstruction_step'\n   [2] Calling event method for module GoodSeedProducer/'trackerDrivenElectronSeedsTmp'\nException Message:\nPrincipal::getByToken: Found zero products matching all criteria\nLooking for type: std::vector<reco::Track>\nLooking for module label: generalTracksBeforeMixing\nLooking for productInstanceName: \n\n   Additional Info:\n      [a] If you wish to continue processing events after a ProductNotFound exception,\nadd \"SkipEvent = cms.untracked.vstring('ProductNotFound')\" to the \"options\" PSet in the configuration.\n\n": [
        "25401.0"
    ],
    "An exception of category 'Unsupported' occurred while\n   [0] Processing run: 1 lumi: 1 event: 1\n   [1] Running path 'simulation_step'\n   [2] Calling event method for module OscarMTProducer/'g4SimHits'\nException Message:\nSimWatchers are not supported for more than 1 thread. If this use case is needed, RunManagerMTWorker has to be updated, and SimWatchers and SimProducers have to be made thread safe.\nAn exception of category 'Unsupported' occurred while\n   [0] Processing run: 1 lumi: 1 event: 4\n   [1] Running path 'simulation_step'\n   [2] Calling event method for module OscarMTProducer/'g4SimHits'\nException Message:\nSimWatchers are not supported for more than 1 thread. If this use case is needed, RunManagerMTWorker has to be updated, and SimWatchers and SimProducers have to be made thread safe.\nAn exception of category 'Unsupported' occurred while\n   [0] Processing run: 1 lumi: 1 event: 3\n   [1] Running path 'simulation_step'\n   [2] Calling event method for module OscarMTProducer/'g4SimHits'\nException Message:\nSimWatchers are not supported for more than 1 thread. If this use case is needed, RunManagerMTWorker has to be updated, and SimWatchers and SimProducers have to be made thread safe.\n": [
        "101.0"
    ],
    "An exception of category 'Unsupported' occurred while\n   [0] Processing run: 1 lumi: 1 event: 3\n   [1] Running path 'simulation_step'\n   [2] Calling event method for module OscarMTProducer/'g4SimHits'\nException Message:\nSimWatchers are not supported for more than 1 thread. If this use case is needed, RunManagerMTWorker has to be updated, and SimWatchers and SimProducers have to be made thread safe.\nAn exception of category 'Unsupported' occurred while\n   [0] Processing run: 1 lumi: 1 event: 1\n   [1] Running path 'simulation_step'\n   [2] Calling event method for module OscarMTProducer/'g4SimHits'\nException Message:\nSimWatchers are not supported for more than 1 thread. If this use case is needed, RunManagerMTWorker has to be updated, and SimWatchers and SimProducers have to be made thread safe.\nAn exception of category 'Unsupported' occurred while\n   [0] Processing run: 1 lumi: 1 event: 4\n   [1] Running path 'simulation_step'\n   [2] Calling event method for module OscarMTProducer/'g4SimHits'\nException Message:\nSimWatchers are not supported for more than 1 thread. If this use case is needed, RunManagerMTWorker has to be updated, and SimWatchers and SimProducers have to be made thread safe.\n": [
        "102.0"
    ]
}