#!/usr/bin/env python
from argparse import ArgumentParser
from os.path import exists
from sys import exit
from json import dumps
import re
from operator import itemgetter

RESULTS_RE = "^([0-9.]+)_([^ ]*) (.*) - time date.*exit: (.*)"
STEP_STATUS_RE = "Step([0-9])-(PASSED|FAILED|NOTRUN)"

if __name__ == "__main__":
  parser = ArgumentParser()
  parser.add_argument("input")
  args = parser.parse_args()
  if not exists(args.input):
    print "Please specify an input file"
    exit(1)

  buf = open(args.input).read()
  results = []
  for l in buf.split("\n"):
    r = re.match(RESULTS_RE, l)
    if not r:
      continue
    workflowId, workflow, steps, exit = r.groups()
    steps = steps.split(" ")
    stepResults = [re.match(STEP_STATUS_RE, s).group(2)
                   for s in steps if re.match(STEP_STATUS_RE, s)]
    results.append({
                   "id": workflowId,
                    "name": workflow,
                    "steps": [{"status": x} for x in stepResults],
                    "order": sum([10-i for (i, x) in enumerate(stepResults) if x == "FAILED"])
                   })
  results.sort(key=itemgetter("order", "id"), reverse=True)
  print dumps(results, sort_keys=True, indent=4, separators=(',', ': '))
