#!/usr/bin/env python
from argparse import ArgumentParser
from os.path import exists
from sys import exit
from json import dumps
import re
from operator import itemgetter

BEGIN_TEST = "^    ([^/]*/[^ ]*) :[ ]*$"
TEST_OK = "[ ]*([^ ]*)[ ]*OK[ ]*"
TEST_ERROR = "[ ]*([^ ]*)[ ]*ERRORS[ ]*"

if __name__ == "__main__":
  parser = ArgumentParser()
  parser.add_argument("input")
  args = parser.parse_args()
  if not exists(args.input):
    print "Please specify an input file"
    exit(1)

  buf = open(args.input).read()
  results = {}
  currentPackage = None
  for l in buf.split("\n"):
    isBegin = re.match(BEGIN_TEST, l)
    if isBegin:
      currentPackage = isBegin.group(1)
      results[currentPackage] = {"name": currentPackage, "errors": [], "ok": []}
      continue
    if not currentPackage:
      continue
    isOk = re.match(TEST_OK, l)
    isError = re.match(TEST_ERROR,l)
    if isOk:
      results[currentPackage]["ok"].append(isOk.group(1))
      continue
    if isError:
      results[currentPackage]["errors"].append(isError.group(1))
      continue
  results = results.values()
  results.sort(key=lambda x : (len(x["errors"]), x["name"]), reverse=True)
  print dumps(results, sort_keys=True, indent=2, separators=(',', ': '))
